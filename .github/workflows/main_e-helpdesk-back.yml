# Deploy E-Helpdesk Backend to Azure App Service
#
# This workflow builds and deploys a Node.js application to Azure App Service.

name: Build and deploy Node.js app to Azure Web App - E-Helpdesk-back

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: E-Helpdesk-back
  NODE_VERSION: "20.x"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup environment for GitHub Actions
        run: node ./prisma/setup-github-env.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ secrets.PORT || '8080' }}
          DOMAIN: ${{ secrets.DOMAIN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client with all binary targets
        run: |
          echo "üîß Generating Prisma client with Azure-compatible binaries..."
          # Set environment for generation
          export DATABASE_URL="postgresql://dummy:dummy@localhost:5432/dummy"
          export NODE_ENV=production
          
          # Generate Prisma client
          npx prisma generate
          
          echo "‚úÖ Prisma client generation completed"

      - name: Verify Prisma Client generation
        run: |
          echo "üîç Verifying Prisma client generation..."
          
          # Check for generated client
          if [ -d "node_modules/.prisma/client" ]; then
            echo "‚úÖ .prisma/client directory found"
            ls -la node_modules/.prisma/client/ | head -10
            
            # Check for essential files
            if [ -f "node_modules/.prisma/client/index.js" ]; then
              echo "‚úÖ index.js exists"
            else
              echo "‚ùå index.js missing!"
              exit 1
            fi
            
            # Check for binary files (engines)
            echo "Binary files in client:"
            find node_modules/.prisma/client -name "*.node" -o -name "*engine*" | head -5
            
          else
            echo "‚ùå .prisma/client directory not found!"
            echo "Checking @prisma/client:"
            ls -la node_modules/@prisma/client/ || echo "No @prisma/client found"
            exit 1
          fi

      - name: Create production build
        run: |
          echo "üì¶ Creating production build..."
          
          # Backup Prisma client before pruning
          cp -r node_modules/.prisma ./prisma-backup
          
          # Remove dev dependencies
          npm prune --production
          
          # Restore Prisma client
          mkdir -p node_modules/.prisma
          cp -r ./prisma-backup/* node_modules/.prisma/
          rm -rf ./prisma-backup
          
          # Verify restoration
          if [ -f "node_modules/.prisma/client/index.js" ]; then
            echo "‚úÖ Prisma client preserved in production build"
          else
            echo "‚ùå Prisma client lost during production build!"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Development"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Pre-deployment verification
        run: |
          echo "üîç Pre-deployment verification..."
          
          if [ -f "node_modules/.prisma/client/index.js" ]; then
            echo "‚úÖ Prisma client ready for Azure deployment"
            echo "Client file size: $(ls -lh node_modules/.prisma/client/index.js | awk '{print $5}')"
          else
            echo "‚ùå Prisma client missing in deployment package!"
            find . -name "*prisma*" -type f | head -10
            exit 1
          fi

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_B848A42705384860A27675DBAFE04932 }}
          package: .
