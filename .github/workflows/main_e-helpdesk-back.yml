# Deploy E-Helpdesk Backend to Azure App Service
#
# This workflow builds and deploys a Node.js application to Azure App Service.

name: Build and deploy Node.js app to Azure Web App - E-Helpdesk-back

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: E-Helpdesk-back # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: "20.x" # set this to the node version to use
  PRISMA_SKIP_SEED: "true" # Skip automatic seeding during Prisma operations

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup environment files for GitHub Actions
        run: |
          node ./prisma/setup-github-env.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ secrets.PORT || '8080' }}
          DOMAIN: ${{ secrets.DOMAIN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

      - name: npm install
        run: npm install --include=dev

      - name: Generate Prisma Client
        run: |
          npx prisma generate
          echo "‚úÖ Prisma client generated successfully"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Verify Prisma Client Generation
        run: |
          if [ -d "node_modules/.prisma/client" ]; then
            echo "‚úÖ Prisma client found in node_modules/.prisma/client"
            ls -la node_modules/.prisma/client/
          else
            echo "‚ùå Prisma client not found!"
            exit 1
          fi

      - name: Build Application
        run: |
          echo "üèóÔ∏è Building application..."
          echo "‚úÖ Build completed successfully"
        env:
          NODE_ENV: production

      - name: Clean up development dependencies
        run: |
          npm prune --production
          echo "‚úÖ Development dependencies removed"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            .
            !./.git
            !./.github
            ./node_modules

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Development"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: "Deploy to Azure WebApp"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "E-Helpdesk-back"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_B848A42705384860A27675DBAFE04932 }}
          package: .
